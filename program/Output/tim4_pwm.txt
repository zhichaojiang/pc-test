; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\tim4_pwm.o --asm_dir=..\Output\ --list_dir=..\Output\ --depend=..\output\tim4_pwm.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\CMSIS -I..\USER -I..\FWlib\inc -I..\FWlib\src -I..\modbus\include -I..\modbus\port -I..\modbus\rtu -I..\modbus\ascii -I..\modbus\include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include -Id:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0 -D__UVISION_VERSION=535 -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_MD --omf_browse=..\output\tim4_pwm.crf tim4_pwm.c]
                          THUMB

                          AREA ||i.TIM4_GPIO_Config||, CODE, READONLY, ALIGN=2

                  TIM4_GPIO_Config PROC
;;;4      
;;;5      static void TIM4_GPIO_Config(void) 
000000  b508              PUSH     {r3,lr}
;;;6      {
;;;7        GPIO_InitTypeDef GPIO_InitStructure;
;;;8      
;;;9      	/* TIM4 clock enable */
;;;10       RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4, ENABLE); 
000002  2101              MOVS     r1,#1
000004  2004              MOVS     r0,#4
000006  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;11       /*  GPIOB clock enable */
;;;12       RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE); 
00000a  2101              MOVS     r1,#1
00000c  2008              MOVS     r0,#8
00000e  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;13     
;;;14     
;;;15       /*GPIOB Configuration: TIM4 channel 4 as alternate function push-pull */
;;;16       GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_9 ;
000012  f44f7000          MOV      r0,#0x200
000016  f8ad0000          STRH     r0,[sp,#0]
;;;17       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;		    // 复用推挽输出
00001a  2018              MOVS     r0,#0x18
00001c  f88d0003          STRB     r0,[sp,#3]
;;;18       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000020  2003              MOVS     r0,#3
000022  f88d0002          STRB     r0,[sp,#2]
;;;19       GPIO_Init(GPIOB, &GPIO_InitStructure);
000026  4669              MOV      r1,sp
000028  4801              LDR      r0,|L1.48|
00002a  f7fffffe          BL       GPIO_Init
;;;20     }
00002e  bd08              POP      {r3,pc}
;;;21     
                          ENDP

                  |L1.48|
                          DCD      0x40010c00

                          AREA ||i.TIM4_Mode_Config||, CODE, READONLY, ALIGN=2

                  TIM4_Mode_Config PROC
;;;32      */
;;;33     static void TIM4_Mode_Config(void)
000000  b510              PUSH     {r4,lr}
;;;34     {
000002  b088              SUB      sp,sp,#0x20
;;;35     	TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;36     	TIM_OCInitTypeDef  TIM_OCInitStructure;
;;;37     
;;;38     	/* PWM信号电平跳变值 */
;;;39     	u16 CCR_Val =0;//0;//2499
000004  2400              MOVS     r4,#0
;;;40     
;;;41     
;;;42     
;;;43     
;;;44       /* Time base configuration */		
;;;45     TIM_TimeBaseStructure.TIM_Period = 150;       //当定时器从0计数到999，即为1000次，为一个定时周期
000006  2096              MOVS     r0,#0x96
000008  f8ad0018          STRH     r0,[sp,#0x18]
;;;46      // TIM_TimeBaseStructure.TIM_Period = 1490;       //当定时器从0计数到999，即为1000次，为一个定时周期
;;;47     	//TIM_TimeBaseStructure.TIM_Period = 4000;       //当定时器从0计数到999，即为1000次，为一个定时周期
;;;48       TIM_TimeBaseStructure.TIM_Prescaler =0;// 359;	    //设置预分频：不预分频，即为72MHz
00000c  2000              MOVS     r0,#0
00000e  f8ad0014          STRH     r0,[sp,#0x14]
;;;49       TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1 ;	//设置时钟分频系数：不分频
000012  f8ad001a          STRH     r0,[sp,#0x1a]
;;;50       TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  //向上计数模式
000016  f8ad0016          STRH     r0,[sp,#0x16]
;;;51     
;;;52       TIM_TimeBaseInit(TIM4, &TIM_TimeBaseStructure);
00001a  a905              ADD      r1,sp,#0x14
00001c  480f              LDR      r0,|L2.92|
00001e  f7fffffe          BL       TIM_TimeBaseInit
;;;53     	
;;;54     	
;;;55     	/* PWM1 Mode configuration: Channel 4 */
;;;56       TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;	    //配置为PWM模式1
000022  2060              MOVS     r0,#0x60
000024  f8ad0004          STRH     r0,[sp,#4]
;;;57       TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;	
000028  2001              MOVS     r0,#1
00002a  f8ad0006          STRH     r0,[sp,#6]
;;;58       TIM_OCInitStructure.TIM_Pulse = CCR_Val;	   //设置跳变值，当计数器计数到这个值时，电平发生跳变
00002e  f8ad400a          STRH     r4,[sp,#0xa]
;;;59       TIM_OCInitStructure.TIM_OCPolarity =TIM_OCPolarity_High;// TIM_OCPolarity_Low;  //当定时器计数值小于CCR_Val时为高电平
000032  2000              MOVS     r0,#0
000034  f8ad000c          STRH     r0,[sp,#0xc]
;;;60       TIM_OC4Init(TIM4, &TIM_OCInitStructure);	 //使能通道4
000038  a901              ADD      r1,sp,#4
00003a  4808              LDR      r0,|L2.92|
00003c  f7fffffe          BL       TIM_OC4Init
;;;61       TIM_OC4PreloadConfig(TIM4, TIM_OCPreload_Enable);
000040  2108              MOVS     r1,#8
000042  4806              LDR      r0,|L2.92|
000044  f7fffffe          BL       TIM_OC4PreloadConfig
;;;62     
;;;63     	
;;;64     
;;;65       TIM_ARRPreloadConfig(TIM4, ENABLE);			 // 使能TIM4重载寄存器ARR
000048  2101              MOVS     r1,#1
00004a  4804              LDR      r0,|L2.92|
00004c  f7fffffe          BL       TIM_ARRPreloadConfig
;;;66       /* TIM4 enable counter */
;;;67       TIM_Cmd(TIM4, ENABLE);                   //使能定时器3	
000050  2101              MOVS     r1,#1
000052  4802              LDR      r0,|L2.92|
000054  f7fffffe          BL       TIM_Cmd
;;;68     }
000058  b008              ADD      sp,sp,#0x20
00005a  bd10              POP      {r4,pc}
;;;69     
                          ENDP

                  |L2.92|
                          DCD      0x40000800

                          AREA ||i.TIM4_PWM_Init||, CODE, READONLY, ALIGN=1

                  TIM4_PWM_Init PROC
;;;69     
;;;70     void TIM4_PWM_Init(void)
000000  b510              PUSH     {r4,lr}
;;;71     {
;;;72     	TIM4_GPIO_Config();
000002  f7fffffe          BL       TIM4_GPIO_Config
;;;73     	TIM4_Mode_Config();	
000006  f7fffffe          BL       TIM4_Mode_Config
;;;74     	
;;;75     }
00000a  bd10              POP      {r4,pc}
                          ENDP

